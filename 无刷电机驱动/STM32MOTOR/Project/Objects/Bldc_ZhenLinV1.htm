<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Bldc_ZhenLinV1.00]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Bldc_ZhenLinV1.00</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Dec 18 01:17:52 2022
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
DMA1_Channel1_IRQHandler &rArr; BldcInt &rArr; StatusMachine &rArr; GetHallValue
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3]">Reset_Handler</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1]">DMA1_Channel1_IRQHandler</a> from main.o(i.DMA1_Channel1_IRQHandler) referenced from startup.o(START)
 <LI><a href="#[3]">Reset_Handler</a> from startup.o(START) referenced from startup.o(START)
 <LI><a href="#[2]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from main.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup.o(START)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(START))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; Main &rArr; ProtectApp
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[5]"></a>BldcApp</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bldc.o(i.BldcApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BldcApp
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PotValueProcess
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunStopControl
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[8]"></a>BldcInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bldc.o(i.BldcInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BldcInt &rArr; StatusMachine &rArr; GetHallValue
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusMachine
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcCount
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[1]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; BldcInt &rArr; StatusMachine &rArr; GetHallValue
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectInt
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInt
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(START)
</UL>
<P><STRONG><a name="[e]"></a>Initialize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, initialize.o(i.Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectInit
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInit
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuTimer1Initialize
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuRccInitialize
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuNvicInitialize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuGpioInitialize
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuDmaInitialize
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;McuAdcInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[18]"></a>LedApp</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, display.o(i.LedApp))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[14]"></a>LedInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, display.o(i.LedInit))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[c]"></a>LedInt</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, display.o(i.LedInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LedInt
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[4]"></a>Main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Main &rArr; ProtectApp
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectApp
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedApp
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcApp
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[19]"></a>ProtectApp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, protect.o(i.ProtectApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ProtectApp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageDetect
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HallDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[16]"></a>ProtectInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, protect.o(i.ProtectInit))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[d]"></a>ProtectInt</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, protect.o(i.ProtectInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ProtectInt
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, main.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(START)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a]"></a>AdcFilter</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, bldc.o(i.AdcFilter))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcInt
</UL>

<P><STRONG><a name="[b]"></a>BldcCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bldc.o(i.BldcCount))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcInt
</UL>

<P><STRONG><a name="[1d]"></a>GetHallValue</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, bldc.o(i.GetHallValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetHallValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusMachine
</UL>

<P><STRONG><a name="[7]"></a>MotorRunStopControl</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bldc.o(i.MotorRunStopControl))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcApp
</UL>

<P><STRONG><a name="[6]"></a>PotValueProcess</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bldc.o(i.PotValueProcess))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcApp
</UL>

<P><STRONG><a name="[9]"></a>StatusMachine</STRONG> (Thumb, 336 bytes, Stack size 8 bytes, bldc.o(i.StatusMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StatusMachine &rArr; GetHallValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHallValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BldcInt
</UL>

<P><STRONG><a name="[13]"></a>McuAdcInitialize</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, initialize.o(i.McuAdcInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[12]"></a>McuDmaInitialize</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, initialize.o(i.McuDmaInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[10]"></a>McuGpioInitialize</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, initialize.o(i.McuGpioInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[15]"></a>McuNvicInitialize</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, initialize.o(i.McuNvicInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[f]"></a>McuRccInitialize</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, initialize.o(i.McuRccInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[11]"></a>McuTimer1Initialize</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, initialize.o(i.McuTimer1Initialize))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize
</UL>

<P><STRONG><a name="[17]"></a>LedCount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, display.o(i.LedCount))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedInt
</UL>

<P><STRONG><a name="[1c]"></a>CurrentDetect</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, protect.o(i.CurrentDetect))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectInt
</UL>

<P><STRONG><a name="[1b]"></a>HallDetect</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, protect.o(i.HallDetect))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectApp
</UL>

<P><STRONG><a name="[1a]"></a>VoltageDetect</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, protect.o(i.VoltageDetect))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtectApp
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
